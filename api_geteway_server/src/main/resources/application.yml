server:
  port: 8080 #端口
spring:
  application:
    name: api-gateway-server #服务名称
  redis:
    host: localhost
    pool: 6379
    database: 0
  cloud: #配置SpringCloudGateway的路由
    gateway:
      routes:
      - id: order-service
        uri: lb://service-order
        predicates:
        - Path=/order-service/**
        filters:
        - RewritePath=/order-service/(?<segment>.*), /$\{segment}
      - id: product-service
        uri: lb://service-product
        predicates:
        - Path=/product-service/**
        #RequestRateLimiter：使用令牌限流过滤器，是getaway提供的
        #参数   replenishRate：向令牌桶填充的速率
        #       burstCapacity：令牌桶的容量
        #key-resolver: '#{@pathKeyResolver}' key限流的规则自己来编写 pathKeyResolver是自己创建对象，放到容器中
        filters:
#        - name: RequestRateLimiter
#          args:
#            # 使用SpEL从容器中获取对象
#            key-resolver: '#{@userKeyResolver}'
#            # 令牌桶每秒填充平均速率
#            redis-rate-limiter.replenishRate: 1
#            # 令牌桶的上限
#            redis-rate-limiter.burstCapacity: 3
        - RewritePath=/product-service/(?<segment>.*), /$\{segment}
  zipkin:
    #base-url: http://127.0.0.1:9411/ #zipkin server的请求地址
    sender:
      #type: web #请求方式,默认以http的方式向zipkin server发送追踪数据
      type: rabbit
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener: # 这里配置了重试策略
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true
  sleuth:
    sampler:
      probability: 1.0 #采样的百分比
#eureka注册中心
eureka:
  client:
    service-url:
      defaultZone: http://localhost:9000/eureka/
  instance:
    prefer-ip-address: true #使用ip地址注册
logging:
  level:
    root: INFO
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG